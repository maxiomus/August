Ext.define('August.model.Customer', {
    extend: 'August.model.Base',

    fields: [
        { name: 'code', type: 'string' },
        { name: 'name', type: 'string' },
        { name: 'addr1', type: 'string' },
        { name: 'addr2', type: 'string' },
        { name: 'city', type: 'string' },
        { name: 'state', type: 'string' },
        { name: 'zip', type: 'string' },
        { name: 'country', type: 'string' },
        { name: 'phone1', type: 'string' },
        { name: 'phone2', type: 'string' },
        { name: 'fax1', type: 'string' },
        { name: 'fax2', type: 'string' },
        { name: 'contact1', type: 'string' },
        { name: 'contact2', type: 'string' },
        { name: 'title1', type: 'string' },
        { name: 'title2', type: 'string' },
        { name: 'email1', type: 'string' },
        { name: 'email2', type: 'string' },
        { name: 'term', type: 'string' },
        { name: 'shipvia', type: 'string' },
        { name: 'status', type: 'string' },
        { name: 'division', type: 'string' },
        { name: 'factor', type: 'string' },
        { name: 'memo', type: 'string' },
        { name: 'memo2', type: 'string' },
        { name: 'warehouse', type: 'string' },
        { name: 'memo_code', type: 'string' },
        { name: 'factorAcct', type: 'string' },
        { name: 'ResellerNum', type: 'string' },
        { name: 'salesRep1', type: 'string' },
        { name: 'salesRep1Rate', type: 'number' },
        { name: 'userName', type: 'string' },
        { name: 'userTime', type: 'date', dateFormat: 'c' },
        { name: 'CreateUser', type: 'string' },
        { name: 'createDate', type: 'date', dateFormat: 'c' },
        { name: 'user1', type: 'string' },
        { name: 'user2', type: 'string' },
        { name: 'user3', type: 'string' },
        { name: 'salesRep2', type: 'string' },
        { name: 'salesRep2Rate', type: 'number' },
        { name: 'credit_limit', type: 'number' },
        { name: 'active', type: 'int' },
        { name: 'priceLevel', type: 'string' },
        { name: 'onOrder', type: 'number' },
        { name: 'openCredit', type: 'number' },
        { name: 'creditExpDate', type: 'date', dateFormat: 'c' },
        { name: 'routingGuide', type: 'string' },
        { name: 'factored', type: 'string' },
        { name: 'duns', type: 'string' },
        { name: 'po_Required', type: 'string' },
        { name: 'duplicate_Po', type: 'string' },
        { name: 'duplicate_Style', type: 'string' },
        { name: 'duplicate_Style_inv_Date', type: 'date', dateFormat: 'c' },
        { name: 'memoCode', type: 'string' },
        { name: 'so_memo', type: 'string' },
        { name: 'inv_memo', type: 'string' },
        { name: 'creditCardNo', type: 'string' },
        { name: 'currency', type: 'string' },
        { name: 'taxno', type: 'string' },
        { name: 'credit_limit_div', type: 'string' },
        { name: 'credit_limit_other', type: 'number' },
        { name: 'order_discountRate', type: 'number' },
        { name: 'priority', type: 'string' },
        { name: 'shipto_store', type: 'string' },
        { name: 'type', type: 'string' },
        { name: 'EDIVendorNo', type: 'string' },
        { name: 'onHold', type: 'string' },
        { name: 'paymentcode', type: 'string' },
        { name: 'agingMaxDays', type: 'int' },
        { name: 'invoiced', type: 'number' },
        { name: 'invoiceBallance', type: 'number' },
        { name: 'creditMemo', type: 'number' },
        { name: 'creditMemoBallance', type: 'number' },
        { name: 'collector', type: 'string' },
        { name: 'user4', type: 'string' },
        { name: 'userf_date', type: 'date', dateFormat: 'c' },
        { name: 'orderType', type: 'string' },
        { name: 'to_script', type: 'int' },
        { name: 'script_add_date', type: 'date', dateFormat: 'c' },
        { name: 'script_up_user', type: 'string' },
        { name: 'dept_required', type: 'string' },
        { name: 'cit_edi_cust', type: 'string' },
        { name: 'ship_whole', type: 'string' },
        { name: 'qb_tranfer', type: 'string' },
        { name: 'auto_ucc128', type: 'string' },
        { name: 'auto_boxcontents', type: 'string' },
        { name: 'cbc_edi_cust', type: 'string' },
        { name: 'bol_spec_instr', type: 'string' },
        { name: 'taxcode1', type: 'string' },
        { name: 'taxid1', type: 'string' },
        { name: 'taxable1', type: 'string' },
        { name: 'taxcode2', type: 'string' },
        { name: 'taxid2', type: 'string' },
        { name: 'taxable2', type: 'string' },
        { name: 'federalid', type: 'string' },
        { name: 'dba', type: 'string' },
        { name: 'salesrep3', type: 'string' },
        { name: 'salesRep3Rate', type: 'number' },
        { name: 'salesrep4', type: 'string' },
        { name: 'salesRep4Rate', type: 'number' },
        { name: 'salesrep5', type: 'string' },
        { name: 'salesRep5Rate', type: 'number' },
        { name: 'edi_customer', type: 'string' },
        { name: 'bol_need', type: 'string' },
        { name: 'soonbulk', type: 'string' },
        { name: 'web_password', type: 'string' },
        { name: 'Agent', type: 'string' },
        { name: 'InvoicePrint', type: 'string' },
        { name: 'InvoiceEmail', type: 'string' },
        { name: 'InvoiceEmailAddress', type: 'string'},
        { name: 'to_wh', type: 'string' },
        { name: 'auto_packlist', type: 'string' },
        { name: 'allowance', type: 'number' },
        { name: 'bonus_allowance', type: 'number' },
        { name: 'territory', type: 'string' },
        { name: 'avg_pmt_date', type: 'date', dateFormat: 'c'},
        { name: 'dropship', type: 'string' }
    ],

    idProperty: 'code',
    identifier: 'negative',

    proxy: {
        type: 'rest',
        url: '/WebApp/api/Customers/',

        pageParam: '',
        startParam: '',
        limitParam: '',

        headers: {
            'Authorization' : 'Bearer ' + localStorage.getItem('access_token')
        },
        
        reader: {
            type: 'json',
            rootProperty: 'data'
        },

        writer: {
            type: 'json',
            //writeAllFields: false,
            allowSingle: false
        },

        listeners: {
            exception: function (proxy, response, operation) {
                console.log('Customer - Model', response, operation);
            }
        }
    }

});